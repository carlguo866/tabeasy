# Generated by Django 3.2.14 on 2022-07-22 01:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0013_auto_20220721_1819'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tourney', '0004_auto_20220721_1735'),
    ]

    operations = [
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='judge', serialize=False, to='accounts.user')),
                ('conflicts', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20, null=True), blank=True, null=True, size=40)),
                ('judge_friends', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(blank=True, max_length=20, null=True), null=True, size=40)),
            ],
        ),
        migrations.RenameField(
            model_name='pairing',
            old_name='round',
            new_name='round_num',
        ),
        migrations.RemoveField(
            model_name='ballot',
            name='judge_name',
        ),
        migrations.RemoveField(
            model_name='pairing',
            name='div_1',
        ),
        migrations.RemoveField(
            model_name='pairing',
            name='div_1_team_1',
        ),
        migrations.RemoveField(
            model_name='pairing',
            name='div_2',
        ),
        migrations.AddField(
            model_name='ballot',
            name='judge',
            field=models.CharField(max_length=30, null=True),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.IntegerField(help_text='enter integer only', primary_key=True, serialize=False)),
                ('team_name', models.CharField(default='PPMT Team', max_length=100, null=True)),
                ('division', models.CharField(choices=[('Disney', 'Disney'), ('Universal', 'Universal')], max_length=100, null=True)),
                ('school', models.CharField(default='placeholder', max_length=100, null=True)),
                ('team_roster', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=10)),
                ('sides', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(choices=[('P', 'Prosecution'), ('D', 'Defense')], max_length=1), blank=True, null=True, size=4)),
                ('ballots', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True), blank=True, null=True, size=4)),
                ('cs', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True), blank=True, null=True, size=4)),
                ('pd', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.IntegerField(blank=True, null=True), blank=True, null=True, size=4)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('round_num', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('courtroom', models.CharField(max_length=1, null=True)),
                ('ballot_1', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ballot_1', related_query_name='ballot_1', to='tourney.ballot')),
                ('ballot_2', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ballot_2', related_query_name='ballot_2', to='tourney.ballot')),
                ('d_team', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='d_teams', related_query_name='d_team', to='tourney.team')),
                ('judge_1', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judge_1', related_query_name='judge_1', to='tourney.judge')),
                ('judge_2', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='judge_2', related_query_name='judge_2', to='tourney.judge')),
                ('p_team', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p_teams', related_query_name='p_team', to='tourney.team')),
            ],
        ),
        migrations.AddField(
            model_name='judge',
            name='judged_round_1',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ballot1', to='tourney.ballot'),
        ),
        migrations.AddField(
            model_name='judge',
            name='judged_round_2',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ballot2', to='tourney.ballot'),
        ),
        migrations.AddField(
            model_name='judge',
            name='judged_round_3',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ballot3', to='tourney.ballot'),
        ),
        migrations.AddField(
            model_name='judge',
            name='judged_round_4',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ballot4', to='tourney.ballot'),
        ),
        migrations.AddField(
            model_name='pairing',
            name='rounds',
            field=models.ManyToManyField(related_name='rounds', related_query_name='round', to='tourney.Round'),
        ),
    ]
